{"version":3,"sources":["images/favicon.svg","images/GitHub.svg","components/theme.jsx","components/Header.jsx","components/Side.jsx","components/Button.jsx","components/Starred.jsx","components/Main.jsx","App.jsx","index.js"],"names":["Theme","useState","parseInt","Date","substring","theme","setTheme","document","querySelector","setAttribute","className","onClick","id","Header","sideBar","href","src","favicon","alt","logo","Side","repo_url","aside","useEffect","fetch","then","res","json","data","setAllRepos","dataToReturn","allRepos","map","repo","index","owner","html_url","avatar_url","login","name","Button","text","variant","size","color","type","classes","Starred","starred_url","console","log","language","stargazers_count","Main","username","setUsername","inputUserName","setInputUserName","url","change","a","dataToRetrun","setUser","user","repos_url","onSubmit","e","preventDefault","urlToSet","placeholder","value","onChange","target","App","window","innerWidth","sideBarExpand","setsideBarExpand","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.f3cb9d25.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/favicon.1ea3f184.svg\";","export default __webpack_public_path__ + \"static/media/GitHub.683c01bd.svg\";","import React, { useState } from \"react\";\nconst Theme = () => {\n    const [theme, setTheme] = useState((parseInt(Date().substring(16, 18)) < 18) && (parseInt(Date().substring(16, 18)) > 6) ? \"light\" : \"dark\");\n    const body = document.querySelector(\"body\");\n    function changeTheme() {\n        setTheme((theme === \"light\") ? \"dark\" : \"light\");\n    }\n    body.setAttribute(\"class\", theme);\n    return (\n        <div className=\"theme\" onClick={changeTheme}>\n            <span className=\"theme-icon material-icons\" id={theme}>\n                {`${theme}_mode`}\n            </span>\n        </div>\n    )\n}\nexport default Theme;","import React from 'react'\nimport favicon from '../images/favicon.svg'\nimport logo from '../images/GitHub.svg'\nimport Theme from './theme'\n\nconst Header = ({ sideBar }) => {\n    return (\n        <header className=\"header\">\n            <div className=\"header-left\">\n                <div className=\"header-left-toggle\" onClick={sideBar}>\n                    <span className=\"material-icons\">menu</span>\n                </div>\n                <a href=\"https://github.com\" className=\"header-left-image\">\n                    <img className=\"header-left-image__img\" src={favicon} alt=\"Favicon\" />\n                    <img className=\"header-left-image__img\" src={logo} alt=\"GitHub\" />\n                </a>\n            </div>\n            <div className=\"header-right\">\n                <Theme />\n            </div>\n        </header>\n    )\n}\n\nexport default Header\n","import React, { useState, useEffect } from \"react\";\n\nconst Side = ({ repo_url, aside }) => {\n\tuseEffect(() => {\n\t\tfetch(repo_url)\n\t\t\t.then((res) => {\n\t\t\t\treturn res.json();\n\t\t\t})\n\t\t\t.then((data) => {\n\t\t\t\tsetAllRepos(data);\n\t\t\t});\n\t}, [repo_url]);\n\tlet dataToReturn = [];\n\tconst [allRepos, setAllRepos] = useState(() => {\n\t\tfetch(repo_url)\n\t\t\t.then((res) => {\n\t\t\t\treturn res.json();\n\t\t\t})\n\t\t\t.then((data) => {\n\t\t\t\tdataToReturn = [...data];\n\t\t\t});\n\t\treturn dataToReturn;\n\t});\n\treturn (\n\t\t<aside className={`side side-${aside ? \"expand\" : \"hide\"}`}>\n\t\t\t<div className=\"side-container\">\n\t\t\t\t<ul className=\"side-list\">\n\t\t\t\t\t{allRepos.map((repo, index) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<li key={index} className=\"side-list-item\">\n\t\t\t\t\t\t\t\t<a href={repo.owner.html_url} className=\"side-list-item__user\">\n\t\t\t\t\t\t\t\t\t<img src={repo.owner.avatar_url} alt={repo.owner.login} />\n\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t<a href={repo.html_url} className=\"side-list-item__repo\">\n\t\t\t\t\t\t\t\t\t{repo.name}\n\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t</aside>\n\t);\n};\n\nexport default Side;\n\n","import React from 'react'\n\nconst Button = ({ className, text, variant, size, color, onClick, type }) => {\n    let classes = \"btn\";\n    if (variant === \"fill\" || variant === \"outline\") {\n        classes += ` btn-${variant}`;\n        if (color === \"light\" || color === \"dark\" || color === \"red\" || color === \"blue\" || color === \"green\" || color === \"yellow\") {\n            classes += `-${color}`\n        }\n    }\n    else {\n        if (color === \"light\" || color === \"dark\" || color === \"red\" || color === \"blue\" || color === \"green\" || color === \"yellow\") {\n            classes += ` btn-${color}`\n        }\n    }\n    if (size === \"small\") {\n        classes += \" btn-sm\";\n    }\n    if (size === \"large\") {\n        classes += \" btn-lg\";\n    }\n    return (\n        <button className={classes + ` ${className}`} onClick={onClick} type={type}>\n            {text}\n        </button >\n    )\n}\n\nexport default Button\n","import React, { useState, useEffect } from \"react\";\n\nconst Starred = ({ starred_url }) => {\n    useEffect(() => {\n        console.log(starred_url);\n        fetch(starred_url)\n            .then((res) => {\n                return res.json();\n            })\n            .then((data) => {\n                console.log(data);\n                setAllRepos(data);\n            });\n    }, [starred_url]);\n    let dataToReturn = [];\n    const [allRepos, setAllRepos] = useState(() => {\n        fetch(starred_url)\n            .then((res) => {\n                return res.json();\n            })\n            .then((data) => {\n                console.log(data);\n                dataToReturn = [...data];\n            });\n        return dataToReturn;\n    });\n    return (\n        <section className=\"starred\">\n            <div className=\"starred-container\">\n                <div className=\"starred-row row\">\n                    {\n                        allRepos.map((repo, index) => {\n                            return (\n                                <div className=\"col-lg-50 col-md-50 col-sm-100\" key={index}>\n                                    <div className=\"starred-repo-container\">\n                                        <div className=\"starred-repo\">\n                                            <div className=\"starred-repo-user\">\n                                                <a className=\"starred-repo-user__link\" href={repo.owner.html_url}>\n                                                    <img className=\"starred-repo-user__img\" src={repo.owner.avatar_url} alt={repo.owner.login} />\n                                                </a>\n                                            </div>\n                                            <div className=\"starred-repo-content\">\n                                                <div className=\"starred-repo-content__name\">\n                                                    <a href={repo.html_url}>\n                                                        {repo.name}\n                                                    </a>\n                                                </div>\n                                                <div className=\"starred-repo-content__user\">\n                                                    <a href={repo.owner.html_url}>\n                                                        {`@${repo.owner.login}`}\n                                                    </a>\n                                                </div>\n                                                <div className=\"starred-repo-content__details\">\n                                                    <div className=\"starred-repo-content__details__language\">\n                                                        <span className=\"material-icons\">language</span>\n                                                        <span>{repo.language}</span>\n                                                    </div>\n                                                    <div className=\"starred-repo-content__details__stars\">\n                                                        <span className=\"material-icons\">star</span>\n                                                        <span>{repo.stargazers_count}</span>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            )\n                        })\n                    }\n                </div>\n            </div>\n        </section >\n    )\n}\n\nexport default Starred\n","import React, { useState } from 'react'\nimport Side from './Side'\nimport Button from './Button';\nimport Starred from './Starred';\n\nconst Main = ({ aside }) => {\n    const [username, setUsername] = useState(\"github\");\n    const [inputUserName, setInputUserName] = useState(\"\");\n    const url = (`https://api.github.com/users/${username}`);\n    const change = (a) => {\n        let dataToRetrun = {};\n        fetch(a)\n            .then((res) => {\n                return res.json();\n            })\n            .then((data) => {\n                setUser(data);\n                dataToRetrun = data;\n            })\n        return dataToRetrun;\n    }\n    const [user, setUser] = useState(() => {\n        const data = change(url);\n        return data;\n    });\n    const handleChange = (e) => {\n        const { value } = e.target;\n        setInputUserName(value);\n    }\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        setUsername(inputUserName);\n        const urlToSet = `https://api.github.com/users/${inputUserName}`;\n        change(urlToSet);\n    }\n    return (\n        <main className=\"main\">\n            <Side repo_url={user.repos_url} aside={aside} />\n            <div className={`page page-aside-${aside ? \"expand\" : \"hide\"}`}>\n                <form className=\"form\" onSubmit={handleSubmit}>\n                    <input\n                        className=\"form-input\"\n                        type=\"text\"\n                        placeholder=\"Enter user name\"\n                        value={inputUserName}\n                        onChange={handleChange}\n                    />\n                    <Button type=\"submit\" text=\"Submit\" color=\"blue\" variant=\"fill\" size=\"small\" />\n                </form>\n                {\n                    username !== \"\" && <div className=\"card\">\n                        <div className=\"card-frame\">\n                            <div className=\"card-box\">\n                                <div className=\"card-head\">\n                                    <div className=\"card-head-image\" onClick={() => { console.log(user) }}>\n                                        <img\n                                            className=\"card-head-image__img\"\n                                            src={user.avatar_url}\n                                            alt={user.name}\n                                        />\n                                    </div>\n                                    <div className=\"card-head-content\">\n                                        <div className=\"card-head-content__name\">\n                                            {user.name}\n                                        </div>\n                                        <div className=\"card-head-content__login\">\n                                            <a href={user.html_url} className=\"card-head-content__login\">{`@${user.login}`}</a>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"card-body\">\n                                    <Starred starred_url={url + \"/starred\"} />\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                }\n            </div>\n        </main>\n    )\n}\n\nexport default Main\n","import React, { useState } from 'react'\nimport Header from './components/Header'\nimport Main from './components/Main'\n\nconst App = () => {\n    const [sideBarExpand, setsideBarExpand] = useState((window.innerWidth > 880 ? true : false));\n    return (\n        <>\n            <Header sideBar={() => { setsideBarExpand(!sideBarExpand) }} />\n            <Main aside={sideBarExpand} />\n        </>\n    )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App.jsx';\nimport \"./style.css\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}